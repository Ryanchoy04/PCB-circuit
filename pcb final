# Circuit Playground Temperature
# Reads the on-board temperature sensor and prints the value

import time
import neopixel
import adafruit_thermistor
import board            

thermistor = adafruit_thermistor.Thermistor(
    board.TEMPERATURE, 10000, 10000, 25, 3950)
pixels = neopixel.NeoPixel(board.NEOPIXEL, 10, brightness=.01)
pixels.fill((0, 0, 0))
pixels.show()
    
n_pixels = 10            
mintemp = 0              
maxtemp = 10 

def wheel(pos):
    # Input a value 0 to 255 to get a color value.
    # The colours are a transition b - g - r - back to b. 
    if (pos < 0) or (pos > 255):
        return (0, 0, 0)
    if (pos < 90):
        return (int(255 - pos*2), 120, int(pos*2))  # blue
    elif (pos < 170):
        pos -= 85
        return (200, int(pos*2), int(255 - pos*2))  # green
    else:
        pos -= 170
        return (int(pos * 2), int(255 - (pos*2)), 30)  # red

def remapRange(value, leftMin, leftMax, rightMin, rightMax):

    leftSpan = leftMax - leftMin
    rightSpan = rightMax - rightMin
    valueScaled = int(value - leftMin) / int(leftSpan)
 
    # Convert the 0-1 range into a value in the right range.
    return int(rightMin + (valueScaled * rightSpan))

while True:
    temp_f = thermistor.temperature * 9 / 5 + 32
    print("Temperature is: %f F" % (temp_f))
    # Store thermistor reading as a variable
    temp = thermistor.temperature 
    # Calculate bar height based on adjustable min/max temperature:
    height = n_pixels * (temp - mintemp) / (maxtemp - mintemp)
    
    for i in range(0, len(pixels)):
        if (i >= height):
            pixels[i] = [0, 0, 0]
        elif (temp >= maxtemp):
            pixels[i] = [255, 0, 0]
        else:
            pixels[i] = wheel(remapRange(i, 0, (n_pixels), 85, 255))
    time.sleep(0.25)
